### **Explanation of EBS Setup Commands in Linux**  

When you attach an **EBS volume** to an EC2 instance, you need to **format, mount, and verify** it before use. Let's break down the commands step by step.  

---

## **1️⃣ List Available Storage Devices**  
```bash
lsblk  
```
🔹 **Purpose:** Displays all block storage devices attached to the instance.  
🔹 **Output Example:**
```
NAME    MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT
xvda    202:0    0   10G  0 disk /
xvdf    202:80   0   20G  0 disk 
```
🔹 **What to look for:**  
- `xvda` → Root volume (already mounted as `/`).  
- `xvdf` → Newly attached EBS volume (not mounted yet).  

---

## **2️⃣ Format the New Volume (ext4 Filesystem)**  
```bash
sudo mkfs -t ext4 /dev/xvdf  
```
🔹 **Purpose:** Formats the new EBS volume with the **ext4 filesystem** (a common Linux file system).  
🔹 **Why?** A new raw disk has no file system, so we must format it before use.  
🔹 **Alternative:** If you need XFS (for high-performance workloads), use:
```bash
sudo mkfs -t xfs /dev/xvdf  
```

⚠️ **Caution:** Formatting will erase all data if the disk was previously used.  

---

## **3️⃣ Create a Mount Point (Directory for Storage Access)**  
```bash
sudo mkdir /mnt/ebs  
```
🔹 **Purpose:** Creates a folder (`/mnt/ebs`) where the new EBS volume will be mounted.  
🔹 **Why?** Linux requires a **mount point** (a directory) to access an external disk.  

---

## **4️⃣ Mount the Volume to the Mount Point**  
```bash
sudo mount /dev/xvdf /mnt/ebs  
```
🔹 **Purpose:** Attaches (`mounts`) the formatted EBS volume to `/mnt/ebs`.  
🔹 **Now:** You can **read/write files** to `/mnt/ebs` as if it were a regular folder.  

---

## **5️⃣ Verify the Storage is Mounted**  
```bash
df -h  
```
🔹 **Purpose:** Displays available disk space and mounted filesystems in a human-readable format (`-h`).  
🔹 **Expected Output:**
```
Filesystem      Size  Used Avail Use% Mounted on
/dev/xvda       10G   3G    7G   30%  /
/dev/xvdf       20G   0G   20G    0%  /mnt/ebs
```
🔹 **Check that `/mnt/ebs` appears in the list**—this confirms the EBS volume is successfully mounted.  

---

### **🚀 Bonus: Make the Mount Permanent (Persist After Reboot)**
By default, **mounting is temporary** and will be lost after a reboot. To make it permanent:  

1️⃣ Find the UUID (Unique ID) of the disk:  
```bash
sudo blkid /dev/xvdf  
```
🔹 Example Output:
```
/dev/xvdf: UUID="1234-5678" TYPE="ext4"
```

2️⃣ Edit the `/etc/fstab` file:  
```bash
sudo nano /etc/fstab  
```
🔹 Add this line at the bottom (replace with your actual UUID):  
```
UUID=1234-5678 /mnt/ebs ext4 defaults,nofail 0 2
```

3️⃣ Save and exit (`Ctrl + X`, then `Y`, then `Enter`).  

4️⃣ Test the configuration:  
```bash
sudo mount -a  
```
🔹 If no errors appear, the mount is now **permanent**!  

---

### **✅ Summary of What Happens**
1️⃣ **List Disks** → Check available storage (`lsblk`).  
2️⃣ **Format Disk** → Prepare it for use (`mkfs -t ext4`).  
3️⃣ **Create Mount Point** → Directory for access (`mkdir /mnt/ebs`).  
4️⃣ **Mount Volume** → Attach the disk (`mount /dev/xvdf /mnt/ebs`).  
5️⃣ **Verify** → Check if it's mounted (`df -h`).  
6️⃣ *(Optional)* **Persist Mount** → Auto-mount after reboot (`/etc/fstab`).  

Would you like a hands-on exercise to practice this in AWS? 🚀
